const { Telegraf, Markup } = require("telegraf");
const dotenv = require("dotenv");
dotenv.config();

const bot = new Telegraf(process.env.BOT_TOKEN);

// –ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç–∞ —Å –æ–±—ã—á–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
bot.command("start", (ctx) => {
  ctx.reply(
    "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.",
    Markup.keyboard([
      Markup.button.webApp("–ù–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É", process.env.WEBAPP_URL),
    ])
      .oneTime() // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–∫—Ä–æ–µ—Ç—Å—è –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
      .resize() // –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–æ–∫
  );
});

bot.on("message", async (ctx) => {
  if (!ctx.message.web_app_data) return;
  try {
    const data = JSON.parse(ctx.message.web_app_data.data);
    ctx.reply(
      `üéâ –í—ã –Ω–∞–±—Ä–∞–ª–∏ ${data.score} –∏–∑ ${data.total} –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤!`,
      Markup.keyboard([
        Markup.button.webApp("–ù–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É", process.env.WEBAPP_URL),
      ])
        .oneTime() // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–∫—Ä–æ–µ—Ç—Å—è –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        .resize() // –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–æ–∫
    );
  } catch (e) {
    console.error("–û—à–∏–±–∫–∞:", e);
    await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.");
  }
});

bot.launch();
console.log("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!");
